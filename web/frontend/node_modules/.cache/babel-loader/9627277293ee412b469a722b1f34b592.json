{"remainingRequest":"/root/go/src/github.com/sunny5156/gocronx/web/new-theme/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/root/go/src/github.com/sunny5156/gocronx/web/new-theme/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/root/go/src/github.com/sunny5156/gocronx/web/new-theme/src/router/index.js","dependencies":[{"path":"/root/go/src/github.com/sunny5156/gocronx/web/new-theme/src/router/index.js","mtime":1602314092000},{"path":"/root/go/src/github.com/sunny5156/gocronx/web/new-theme/node_modules/cache-loader/dist/cjs.js","mtime":1600257155902},{"path":"/root/go/src/github.com/sunny5156/gocronx/web/new-theme/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":1600257116664},{"path":"/root/go/src/github.com/sunny5156/gocronx/web/new-theme/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1600257145698}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/root/go/src/github.com/sunny5156/gocronx/web/new-theme/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.resetRouter = resetRouter;\nexports.default = exports.asyncRouterMap = exports.constantRouterMap = void 0;\n\nvar _interopRequireWildcard2 = _interopRequireDefault(require(\"/root/go/src/github.com/sunny5156/gocronx/web/new-theme/node_modules/@babel/runtime-corejs2/helpers/interopRequireWildcard\"));\n\nvar _vue = _interopRequireDefault(require(\"vue\"));\n\nvar _vueRouter = _interopRequireDefault(require(\"vue-router\"));\n\nvar _layout = _interopRequireDefault(require(\"@/layout\"));\n\nvar _config = require(\"./config\");\n\n// import store from '../store'\n// import { asyncRouterMap11street } from './11street'\n_vue.default.use(_vueRouter.default);\n/**\n * Note: sub-menu only appear when route children.length >= 1\n * Detail see: https://panjiachen.github.io/vue-element-admin-site/guide/essentials/router-and-nav.html\n *\n * hidden: true                   if set true, item will not show in the sidebar(default is false)\n * alwaysShow: true               if set true, will always show the root menu\n *                                if not set alwaysShow, when item has more than one children route,\n *                                it will becomes nested mode, otherwise not show the root menu\n * redirect: noRedirect           if set noRedirect will no redirect in the breadcrumb\n * name:'router-name'             the name is used by <keep-alive> (must set!!!)\n * meta : {\n    roles: ['admin','editor']    control the page roles (you can set multiple roles)\n    title: 'title'               the name show in sidebar and breadcrumb (recommend set)\n    icon: 'svg-name'             the icon show in the sidebar\n    breadcrumb: false            if set false, the item will hidden in breadcrumb(default is true)\n    activeMenu: '/example/list'  if set path, the sidebar will highlight the path you set\n  }\n */\n\n/**\n * constantRouterMap\n * a base page that does not have permission requirements\n * all roles can be accessed\n */\n\n\nvar constantRouterMap = [{\n  path: '/login',\n  component: function component() {\n    return Promise.resolve().then(function () {\n      return (0, _interopRequireWildcard2.default)(require('@/views/login'));\n    });\n  },\n  hidden: true\n}, {\n  path: '/404',\n  component: function component() {\n    return Promise.resolve().then(function () {\n      return (0, _interopRequireWildcard2.default)(require('@/views/errorPage/404'));\n    });\n  },\n  hidden: true\n}, {\n  path: '/401',\n  component: function component() {\n    return Promise.resolve().then(function () {\n      return (0, _interopRequireWildcard2.default)(require('@/views/errorPage/401'));\n    });\n  },\n  hidden: true\n}, {\n  path: '/system',\n  component: _layout.default,\n  redirect: '/system/manager',\n  alwaysShow: true,\n  name: 'system.setting',\n  meta: {\n    title: '系统管理',\n    icon: 'setting',\n    breadcrumb: false\n  },\n  children: [{\n    path: '/system/notice',\n    name: 'system.notice',\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/views/systemManager/notice'));\n      });\n    },\n    meta: {\n      title: '通知配置',\n      icon: 'notification'\n    }\n  }, {\n    path: '/system/logs',\n    name: 'system.logs',\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/views/systemManager/logs'));\n      });\n    },\n    meta: {\n      title: '登录日志',\n      icon: 'log'\n    }\n  }]\n}, {\n  path: '/user',\n  component: _layout.default,\n  children: [{\n    path: '/user/manager',\n    name: 'user.manager',\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/views/userManager/list'));\n      });\n    },\n    meta: {\n      title: '用户管理',\n      icon: 'user-manage'\n    }\n  }]\n}, {\n  path: '/project',\n  component: _layout.default,\n  children: [{\n    path: '/project/list',\n    name: 'project.list',\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/views/project/list'));\n      });\n    },\n    meta: {\n      title: '项目管理',\n      icon: 'project'\n    }\n  }, {\n    path: '/project/list/user/:id',\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/views/project/userList'));\n      });\n    },\n    name: 'project.userList',\n    meta: {\n      title: '项目人员管理',\n      icon: 'training'\n    },\n    hidden: true\n  }]\n}, {\n  path: '/',\n  component: _layout.default,\n  redirect: '/task/manager/timing-tasks',\n  alwaysShow: true,\n  // will always show the root menu\n  meta: {\n    title: '任务管理',\n    icon: 'task-management',\n    breadcrumb: false\n  },\n  children: [{\n    path: '/task/manager/timing-tasks',\n    name: 'TimingTasks',\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/views/taskManager/timingTasks'));\n      });\n    },\n    meta: {\n      title: '定时任务',\n      icon: 'task-management'\n    }\n  }, {\n    path: '/task/manager/task-logs',\n    name: 'TaskLogs',\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/views/taskManager/taskLogs'));\n      });\n    },\n    meta: {\n      title: '任务日志',\n      icon: 'log'\n    }\n  }]\n}, {\n  path: '/host',\n  component: _layout.default,\n  children: [{\n    path: '/host/manager/list',\n    name: 'host.manager.list',\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/views/hostManager/hostList'));\n      });\n    },\n    meta: {\n      title: '任务节点',\n      icon: 'site01'\n    }\n  }]\n}];\nexports.constantRouterMap = constantRouterMap;\nvar asyncRouterMap = [// {\n//   path: '/system',\n//   component: Layout,\n//   alwaysShow: true, // will always show the root menu\n//   meta: {\n//     title: '系统',\n//     icon: 'settings',\n//     permission: 'system.view',\n//     breadcrumb: false\n//   },\n//   children: [\n//     {\n//       path: '/system/permission',\n//       component: () => import('@/views/system/permission'),\n//       name: 'system.permission',\n//       // alwaysShow: true, // will always show the root menu\n//       meta: { title: '权限管理', icon: 'setting', permission: 'manager.manager.permission.list' }\n//     }]\n// },\n// {\n//   path: '/user',\n//   component: Layout,\n//   redirect: '/user/manage',\n//   alwaysShow: true,\n//   name: 'user',\n//   meta: {\n//     title: '用户',\n//     icon: 'users',\n//     permission: 'user.view',\n//     breadcrumb: false\n//   },\n//   children: [\n//     {\n//       path: '/user/user',\n//       name: 'user.user',\n//       component: () => import('@/views/user/manage'),\n//       meta: { title: '用户管理', icon: 'user-manage', permission: 'manager.manager.user.list' }\n//     },\n//     {\n//       path: '/user/role',\n//       name: 'user.role',\n//       component: () => import('@/views/user/role'),\n//       meta: { title: '角色管理', icon: 'role', permission: 'manager.manager.role.list' }\n//     }\n//   ]\n// },\n{\n  path: '*',\n  redirect: '/404',\n  hidden: true\n}];\nexports.asyncRouterMap = asyncRouterMap;\n\nvar createRouter = function createRouter() {\n  return new _vueRouter.default({\n    mode: 'history',\n    // require service support\n    scrollBehavior: function scrollBehavior() {\n      return {\n        y: 0\n      };\n    },\n    routes: constantRouterMap\n  });\n};\n\nif (_config.routerConfig) {// if (routerConfig['11street']) {\n  //   store.dispatch('addPlatform', '11street').then(() => {\n  //   })\n  //   asyncRouterMap.push(asyncRouterMap11street())\n  // }\n}\n\nvar router = createRouter(); // Detail see: https://github.com/vuejs/vue-router/issues/1234#issuecomment-357941465\n\nfunction resetRouter() {\n  var newRouter = createRouter();\n  router.matcher = newRouter.matcher; // reset router\n}\n\nvar _default = router;\nexports.default = _default;",null]}